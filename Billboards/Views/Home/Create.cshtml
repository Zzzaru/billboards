@model Billboards.Models.EF.BillboardE

@{
    ViewBag.Title = "Добавить";
}

<h2>Добавление рекламной конструкции</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Description, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MaintenanceTime, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MaintenanceTime, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MaintenanceTime, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Location, new { @class = "control-label col-md-2" })
            <div class="col-md-10" id="yMap" style="height: 400px;"></div>
            @Html.HiddenFor(model => model.Location)
            @Html.ValidationMessageFor(model => model.Location, "", new { @class = "text-danger col-md-offset-2 col-md-10" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Type, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EnumDropDownListFor(model => model.Type, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Type, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Heigh, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Heigh, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Heigh, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Width, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Width, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Width, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MonthlyCost, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MonthlyCost, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MonthlyCost, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Добавить" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Обратно к списку", "Index")
</div>

@section Scripts {
  <script>
    $(function () {
        $.validator.defaults.ignore = "";

        $('#MaintenanceTime').kendoDateTimePicker({
            culture: "ru"
        });

        var myMap;
        ymaps.ready(function () {
            myMap = showMap(myMap);
            myMap.events.add('click', function (e) {
                clickHandler(e, myMap);
            });
        });
    });
</script>

    @Scripts.Render("~/bundles/validate")
    @Scripts.Render("~/bundles/validateExt")
    @Scripts.Render("~/bundles/unobtrusiveValidate")
    @Scripts.Render("~/bundles/kendo")
}
